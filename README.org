:PROPERTIES:
:header-args: :results verbatim :exports both
:END:
#+title: its-jointprobability
#+EXPORT_EXCLUDE_TAGS: noexport

A Bayesian approach to generating metadata for educational materials.

This project is primarily intended to be used as a microservice through the ~nix~ package. Additionally, it includes some CLI utilities in order to (re-) train the model for some data (data not included).

* Utils :oexport:
#+name: format-json
#+begin_src shell sh :var result="" :results verbatim
echo $result | json
#+end_src

#+name: format-prediction
#+begin_src python :var result="" :results output :session python-jointprobability-demo
import json
import pandas as pd
result_dict = json.loads(result)["predictions"]
for key, value in sorted(list(result_dict.items())):
    print(key)
    print("--------------------------------------------------------------------")
    df = pd.DataFrame.from_dict(value).set_index("name")
    df = df.drop("id", axis=1)
    df["prob_interval"] = df.apply(lambda x: [f"{y:g}" for y in x["prob_interval"]], axis=1)
    print(df)
    print()
#+end_src

* Usage

** Service

With ~Nix~, no further installation is required to run the microservice. Simply run the following command:
#+begin_src shell
nix run github:openeduhub/its-jointprobability
#+end_src
or optionally, with CUDA support:
#+begin_src shell
nix run "github:openeduhub/its-jointprobability#with-cuda"
#+end_src

If the package has been installed locally, the service is also available as ~its-jointprobability~ from the command line.

For more information on configuration options, see
#+begin_src shell
nix run github:openeduhub/its-jointprobability -- --help
#+end_src

Once started, see the ~Swagger~ UI for documentation on the service.
It is located on =http://localhost:8080/docs= by default.

** Model Training

To retrain the model under some data, use the included ~retrain-model~ CLI tool, e.g. through
#+begin_src shell
nix run "github:openeduhub/its-jointprobability#retrain-model" -- <path/to/data-dir>
#+end_src
or, *highly recommended*, with CUDA:
#+begin_src shell
nix run "github:openeduhub/its-jointprobability#retrain-model-with-cuda" -- <path/to/data-dir>
#+end_src

The utility will look for =train_data= and =train_labels=, which are assumed to files that can be loaded through [[https://pytorch.org/docs/stable/generated/torch.load.html][torch.load]]. These should be (=float=-type) [[https://pytorch.org/docs/stable/tensors.html#torch.Tensor][torch.Tensor]] objects with the following content:
- ~train_data_labeled~ :: a two-dimensional =Tensor= where the first dimension corresponds to the individual documents to use for training and the second dimensions contains each document's content, encoded through their Bag-of-words representation.
- ~train_targets~ :: a two-dimensional =Tensor= where the first dimension corresponds to the individual documents to use for training and the second dimension encodes whether each document belongs to each discipline (=1.0= if it does, =0.0= otherwise).

Once the data has been loaded, the topic model will be trained (this will take a long time) and saved within the set directory under =prodslda=. If this file already exists, this step is skipped.

Finally, the Bayesian classification model is trained and saved under =classification=. At this point, some quality metrics will be computed for the model on the training data. If ~test_data_labeled~ and ~test_targets~ are present in the given directory (analogous to the training data), these quality metrics will also be computed for this testing data.

* Features & Demo of the Service
:PROPERTIES:
:header-args: :results verbatim :exports both :post format-json(result=*this*) :wrap src
:END:

** Ping

Once the service has started, we can ping it to check that it is responding to requests:
#+begin_src shell :post :exports both
curl -i -X GET http://localhost:8080/_ping
#+end_src

#+RESULTS:
#+begin_src
HTTP/1.1 200 OK
date: Mon, 15 Jan 2024 15:34:05 GMT
server: uvicorn
content-length: 4
content-type: application/json

null
#+end_src

** Discipline Prediction
:PROPERTIES:
:header-args: :results verbatim :exports both :post format-prediction(result=*this*)
:END:

With the =/predict= endpoint, we can send a text to the model. For readability, we only ask for the seven most relevant categories for each metadata field.

In addition to the identifiers of the predicted metadata, we also get some diagnostics that help us understand whether this is a relevant match (in principle, all categories are always returned). Specifically, we gain two point-estimates (mean and median) for the probability of the category belonging to the given text, according to the model. We also get a credibility interval (by default 80%) on said probability.

In the example below, we get only one relevant school discipline, which is also the one we would be expecting for the text (Mathematics). Because the text is relatively short, the probability of this fit is still relatively low. We also get a strong match with Sekundarstufe I, which is also what we would expect, given that Pythagoras' Theorem is usually covered in early High School.
#+begin_src shell :exports both
curl -X 'POST' \
  'http://localhost:8080/predict' \
  -H 'Content-Type: application/json' \
  -d '{
  "text": "Der Satz des Pythagoras lautet: a^2 + b^2 = c^2. Er wird benutzt, um die Hypotenuse eines rechtwinkligen Dreiecks zu berechnen.",
  "num_predictions": "7"
}'
#+end_src

#+RESULTS:
#+begin_example
properties.ccm:curriculum
--------------------------------------------------------------------
                                                  mean_prob  ...          prob_interval
name                                                         ...                       
Nützlichkeit und Pflicht als ethische Prinzipien   0.384314  ...  [0.0833732, 0.574345]
Analytische Geometrie                              0.395508  ...  [0.0794638, 0.628632]
Musik (selbst) gestalten: Musikpraxis              0.362913  ...  [0.0759047, 0.557543]
Formen und Strukturen von Musik                    0.367612  ...  [0.0690188, 0.569736]
zeitgemäße Bildungskonzepte                        0.319510  ...  [0.0847479, 0.460477]
Literatur, Film und Theater                        0.308254  ...  [0.0560344, 0.493411]
Darstellendes Spiel                                0.340132  ...  [0.0795361, 0.513668]

[7 rows x 3 columns]

properties.ccm:educationalcontext
--------------------------------------------------------------------
                    mean_prob  median_prob          prob_interval
name                                                             
Sekundarstufe I      0.654633     0.669177   [0.490553, 0.932882]
Sekundarstufe II     0.603329     0.614766   [0.400552, 0.903478]
Primarstufe          0.327196     0.258120  [0.0576894, 0.570731]
Berufliche Bildung   0.258773     0.215363  [0.0546799, 0.451351]
Erwachsenenbildung   0.234145     0.195889  [0.0466699, 0.360134]
Förderschule         0.221898     0.166949  [0.0315575, 0.399875]
Hochschule           0.190193     0.152832  [0.0329166, 0.324016]

properties.ccm:educationalintendedenduserrole
--------------------------------------------------------------------
            mean_prob  median_prob          prob_interval
name                                                     
Lerner/in    0.863147     0.894445   [0.799996, 0.989182]
Lehrer/in    0.703401     0.739889    [0.561452, 0.95766]
Eltern       0.253001     0.242746  [0.0426235, 0.370563]
Berater/in   0.222501     0.177155  [0.0287899, 0.339953]
Autor/in     0.193119     0.157303  [0.0407921, 0.310687]
andere       0.168521     0.132580  [0.0120083, 0.267781]
Verwaltung   0.121123     0.090612  [0.0160277, 0.183378]

properties.ccm:oeh_lrt
--------------------------------------------------------------------
                                      mean_prob  ...          prob_interval
name                                             ...                       
Arbeitsblatt                           0.342820  ...    [0.091431, 0.53233]
Erklärvideo und gefilmtes Experiment   0.306758  ...    [0.043325, 0.45739]
Material                               0.320040  ...   [0.097256, 0.538143]
Bild (Material)                        0.247662  ...  [0.0265295, 0.366983]
Skript, Handout und Handreichung       0.252249  ...  [0.0325944, 0.409316]
Ausbildungsberuf                       0.264777  ...  [0.0532168, 0.403397]
Wiki (dynamisch)                       0.246637  ...  [0.0484764, 0.416585]

[7 rows x 3 columns]

properties.ccm:taxonid
--------------------------------------------------------------------
            mean_prob  median_prob          prob_interval
name                                                     
Mathematik   0.695934     0.746330   [0.576899, 0.947951]
Allgemein    0.299985     0.230039  [0.0853471, 0.510657]
Gesundheit   0.210474     0.191819  [0.0309028, 0.313932]
Physik       0.221739     0.191111   [0.047686, 0.349161]
MINT         0.197152     0.190511  [0.0373135, 0.279964]
Informatik   0.199783     0.179460  [0.0399572, 0.325506]
Deutsch      0.187236     0.172270  [0.0215497, 0.306561]
#+end_example

Note that these predictions are stochastic, so another run on the same text may yield slightly different predictions:
#+begin_src shell :exports both
curl -X 'POST' \
  'http://localhost:8080/predict' \
  -H 'Content-Type: application/json' \
  -d '{
  "text": "Der Satz des Pythagoras lautet: a^2 + b^2 = c^2. Er wird benutzt, um die Hypotenuse eines rechtwinkligen Dreiecks zu berechnen.",
  "num_predictions": "7"
}'
#+end_src

#+RESULTS:
#+begin_example
properties.ccm:curriculum
--------------------------------------------------------------------
                                                    mean_prob  ...          prob_interval
name                                                           ...                       
Musik in Verbindung mit Sprache, Szene, Bild, F...   0.388393  ...  [0.0614136, 0.586518]
Landeskunde und Interkulturelles                     0.400979  ...   [0.137327, 0.635193]
Klimawandel und Klimaschutz                          0.372684  ...  [0.0227108, 0.562505]
Epochen und Stile                                    0.391354  ...   [0.135077, 0.641921]
Kaiser Napoleon I.                                   0.360459  ...  [0.0924997, 0.600456]
Beschleunigte Bewegungen                             0.368070  ...  [0.0743188, 0.571316]
Schalenmodell nach Bohr                              0.377522  ...    [0.11141, 0.649549]

[7 rows x 3 columns]

properties.ccm:educationalcontext
--------------------------------------------------------------------
                    mean_prob  median_prob          prob_interval
name                                                             
Sekundarstufe II     0.634096     0.642172   [0.451222, 0.912413]
Sekundarstufe I      0.559306     0.556226    [0.349322, 0.86069]
Primarstufe          0.315729     0.277069  [0.0909978, 0.500635]
Erwachsenenbildung   0.298472     0.263619  [0.0645766, 0.489038]
Berufliche Bildung   0.243895     0.222365  [0.0395768, 0.390516]
Fortbildung          0.249055     0.220555  [0.0469232, 0.383427]
Förderschule         0.236469     0.188340  [0.0357555, 0.386986]

properties.ccm:educationalintendedenduserrole
--------------------------------------------------------------------
            mean_prob  median_prob           prob_interval
name                                                      
Lerner/in    0.790260     0.852407    [0.671647, 0.974729]
Lehrer/in    0.779079     0.814874    [0.622514, 0.950242]
Verwaltung   0.218319     0.194525   [0.0439084, 0.362736]
andere       0.208597     0.147511   [0.0469722, 0.366748]
Berater/in   0.139346     0.113064   [0.0235431, 0.211484]
Eltern       0.147106     0.105997   [0.0182491, 0.238902]
Autor/in     0.084653     0.060940  [0.00810601, 0.127504]

properties.ccm:oeh_lrt
--------------------------------------------------------------------
                                      mean_prob  ...          prob_interval
name                                             ...                       
Arbeitsblatt                           0.354307  ...  [0.0408562, 0.467791]
Erklärvideo und gefilmtes Experiment   0.339749  ...  [0.0683247, 0.527041]
Übungsmaterial                         0.298012  ...   [0.072551, 0.473362]
Material                               0.273938  ...  [0.0784722, 0.409884]
Audio                                  0.255246  ...  [0.0341634, 0.399264]
Video (Material)                       0.268960  ...  [0.0250811, 0.379912]
Wiki (dynamisch)                       0.239536  ...  [0.0288445, 0.354752]

[7 rows x 3 columns]

properties.ccm:taxonid
--------------------------------------------------------------------
            mean_prob  median_prob          prob_interval
name                                                     
Mathematik   0.619814     0.632119   [0.449606, 0.894186]
Physik       0.246187     0.211195  [0.0625183, 0.383772]
Allgemein    0.225092     0.195792  [0.0516529, 0.360626]
Geschichte   0.213288     0.191261  [0.0208465, 0.296778]
Spanisch     0.218070     0.185290  [0.0616468, 0.346949]
Religion     0.209142     0.181155   [0.0373068, 0.35147]
Biologie     0.210446     0.177506  [0.0269677, 0.331557]
#+end_example

To reduce this variance, we can increase the number of samples being drawn for the prediction. Note that the computation time is proportional to the number of such samples. By default, 100 samples are drawn.
#+begin_src shell :exports both
curl -X 'POST' \
  'http://localhost:8080/predict' \
  -H 'Content-Type: application/json' \
  -d '{
  "text": "Der Satz des Pythagoras lautet: a^2 + b^2 = c^2. Er wird benutzt, um die Hypotenuse eines rechtwinkligen Dreiecks zu berechnen.",
  "num_predictions": "7",
  "num_samples": "2500"
}'
#+end_src

#+RESULTS:
#+begin_example
properties.ccm:curriculum
--------------------------------------------------------------------
                              mean_prob  ...           prob_interval
name                                     ...                        
Vereinfachung von Termen       0.293763  ...   [0.0208612, 0.480528]
Biologie                       0.224043  ...   [0.0180456, 0.348511]
Mathematik                     0.226619  ...   [0.0155277, 0.365754]
Karikaturen                    0.228475  ...   [0.00944985, 0.37172]
Wurzeln                        0.238094  ...    [0.013232, 0.401951]
Produzieren und Präsentieren   0.216160  ...    [0.0117046, 0.34127]
Lesen                          0.213520  ...  [0.00857915, 0.331034]

[7 rows x 3 columns]

properties.ccm:educationalcontext
--------------------------------------------------------------------
                    mean_prob  median_prob          prob_interval
name                                                             
Sekundarstufe I      0.680544     0.713652     [0.5032, 0.951316]
Sekundarstufe II     0.566506     0.579384   [0.332069, 0.867996]
Primarstufe          0.323571     0.297970  [0.0601986, 0.496731]
Erwachsenenbildung   0.228617     0.186132  [0.0259565, 0.359564]
Hochschule           0.180360     0.146433  [0.0144117, 0.284553]
Berufliche Bildung   0.183241     0.144407  [0.0190932, 0.293986]
Elementarbereich     0.169688     0.133377  [0.0153058, 0.268159]

properties.ccm:educationalintendedenduserrole
--------------------------------------------------------------------
            mean_prob  median_prob          prob_interval
name                                                     
Lerner/in    0.739129     0.782296    [0.58265, 0.973507]
Lehrer/in    0.731811     0.766407   [0.585181, 0.970614]
Eltern       0.210106     0.174936  [0.0201436, 0.330326]
andere       0.173029     0.137885  [0.0184858, 0.269719]
Berater/in   0.179137     0.134480  [0.0140171, 0.287003]
Autor/in     0.170003     0.132121  [0.0125088, 0.265517]
Verwaltung   0.168800     0.129221  [0.0123831, 0.267913]

properties.ccm:oeh_lrt
--------------------------------------------------------------------
                                      mean_prob  ...          prob_interval
name                                             ...                       
Arbeitsblatt                           0.410907  ...     [0.11878, 0.62953]
Erklärvideo und gefilmtes Experiment   0.366738  ...  [0.0974797, 0.600607]
Material                               0.284988  ...   [0.0495953, 0.44681]
Video (Material)                       0.269406  ...   [0.046688, 0.418897]
Wiki (dynamisch)                       0.237658  ...   [0.024304, 0.364989]
Übungsmaterial                         0.238451  ...  [0.0268248, 0.374936]
Bild (Material)                        0.211115  ...   [0.0155573, 0.32085]

[7 rows x 3 columns]

properties.ccm:taxonid
--------------------------------------------------------------------
                         mean_prob  median_prob          prob_interval
name                                                                  
Mathematik                0.668345     0.695508    [0.484359, 0.94334]
Allgemein                 0.211051     0.177695  [0.0292377, 0.324231]
Astronomie                0.215299     0.176640  [0.0282894, 0.340223]
Chemie                    0.212353     0.175294  [0.0238785, 0.330932]
Physik                    0.207348     0.173580  [0.0179071, 0.318448]
Interkulturelle Bildung   0.203794     0.166691   [0.026072, 0.325915]
Biologie                  0.203074     0.166049  [0.0179179, 0.317264]
#+end_example

Second run, for comparison
#+begin_src shell :exports both
curl -X 'POST' \
  'http://localhost:8080/predict' \
  -H 'Content-Type: application/json' \
  -d '{
  "text": "Der Satz des Pythagoras lautet: a^2 + b^2 = c^2. Er wird benutzt, um die Hypotenuse eines rechtwinkligen Dreiecks zu berechnen.",
  "num_predictions": "7",
  "num_samples": "2500"
}'
#+end_src

#+RESULTS:
#+begin_example
properties.ccm:curriculum
--------------------------------------------------------------------
                           mean_prob  ...           prob_interval
name                                  ...                        
Open Data und Open Source   0.251556  ...  [0.00263463, 0.425336]
Krankheiten                 0.237515  ...   [0.0110163, 0.385997]
Glück im Unterricht         0.227461  ...   [0.0191827, 0.368178]
Kaufen und Konsum           0.215435  ...   [0.0133089, 0.339473]
englischsprachige Welt      0.228829  ...  [0.00653028, 0.383157]
Sportspiele                 0.217977  ...   [0.0102107, 0.356836]
Planetensystem              0.219876  ...  [0.00986412, 0.355291]

[7 rows x 3 columns]

properties.ccm:educationalcontext
--------------------------------------------------------------------
                    mean_prob  median_prob          prob_interval
name                                                             
Sekundarstufe I      0.647468     0.678262    [0.459241, 0.92928]
Sekundarstufe II     0.543986     0.548882   [0.261596, 0.824912]
Primarstufe          0.326568     0.296184  [0.0586862, 0.516016]
Erwachsenenbildung   0.239412     0.199192  [0.0278885, 0.379274]
Berufliche Bildung   0.224767     0.189582   [0.0263438, 0.35375]
Elementarbereich     0.187389     0.151727  [0.0153927, 0.285704]
Hochschule           0.181465     0.145545  [0.0135712, 0.282949]

properties.ccm:educationalintendedenduserrole
--------------------------------------------------------------------
            mean_prob  median_prob          prob_interval
name                                                     
Lerner/in    0.754486     0.793007   [0.620342, 0.975765]
Lehrer/in    0.705525     0.740523   [0.542826, 0.956459]
Eltern       0.216922     0.176752  [0.0198752, 0.333844]
Verwaltung   0.182931     0.144745  [0.0169197, 0.283449]
Berater/in   0.174188     0.136313  [0.0105686, 0.271473]
Autor/in     0.155342     0.117258  [0.0134722, 0.245761]
andere       0.144465     0.112681  [0.0096654, 0.221051]

properties.ccm:oeh_lrt
--------------------------------------------------------------------
                                      mean_prob  ...          prob_interval
name                                             ...                       
Arbeitsblatt                           0.395575  ...    [0.10619, 0.615702]
Erklärvideo und gefilmtes Experiment   0.355801  ...  [0.0886097, 0.568478]
Material                               0.297670  ...  [0.0409864, 0.455727]
Übungsmaterial                         0.262699  ...  [0.0405269, 0.416879]
Video (Material)                       0.240248  ...   [0.0276557, 0.37569]
Wiki (dynamisch)                       0.236619  ...  [0.0205028, 0.365641]
Unterrichtsbaustein                    0.234405  ...  [0.0306412, 0.379967]

[7 rows x 3 columns]

properties.ccm:taxonid
--------------------------------------------------------------------
                           mean_prob  ...          prob_interval
name                                  ...                       
Mathematik                  0.663999  ...    [0.475483, 0.94757]
Allgemein                   0.221810  ...  [0.0385195, 0.351183]
Chemie                      0.205771  ...  [0.0173134, 0.315559]
Physik                      0.208658  ...  [0.0220597, 0.333752]
Deutsch                     0.202221  ...  [0.0222931, 0.315362]
Sonderpädagogik             0.204455  ...  [0.0194106, 0.324097]
Wirtschaft und Verwaltung   0.195375  ...  [0.0183807, 0.301618]

[7 rows x 3 columns]
#+end_example

Additionally, you may notice that the probabilities for other, less fitting, categories, are still relatively high. This is because the text is relatively short, so the model cannot conclude that e.g. a particular school discipline does not fit. This behavior becomes more extreme the shorter the given text is. Essentially, the model has been given too little data to decide for or against any one category.

For an even more extreme example, see the following text. The probability that the 10th most likely school discipline applies, according to the model, is higher than third most likely school discipline in the longer text above -- there is simply not enough text to conclude that any of these disciplines do not apply, so the model defaults to roughly the overall frequencies in the training data.
#+begin_src shell :exports both
curl -X 'POST' \
  'http://localhost:8080/predict' \
  -H 'Content-Type: application/json' \
  -d '{
  "text": "a^2 + b^2 = c^2.",
  "num_predictions": "10",
  "num_samples": "2500"
}'
#+end_src

#+RESULTS:
#+begin_example
properties.ccm:curriculum
--------------------------------------------------------------------
                                       mean_prob  ...           prob_interval
name                                              ...                        
Das Periodensystem                      0.293811  ...   [0.0182644, 0.477848]
Lineare Funktionen                      0.274994  ...   [0.0255581, 0.438814]
Theatertheorie                          0.273995  ...    [0.022943, 0.442112]
Vögel                                   0.276485  ...    [0.012434, 0.465968]
Bruttoinlandsprodukt                    0.254401  ...    [0.0108974, 0.41166]
Digitale Gesellschaft (mit) gestalten   0.245949  ...   [0.0119154, 0.384066]
Gebrochenrationale Funktionen           0.249574  ...   [0.0213643, 0.398126]
Spanisch                                0.254853  ...  [0.00873993, 0.430613]
Energie und Strom                       0.248497  ...   [0.0133495, 0.406867]
Biodiversität und Artenschutz           0.241517  ...     [0.030012, 0.39048]

[10 rows x 3 columns]

properties.ccm:educationalcontext
--------------------------------------------------------------------
                    mean_prob  median_prob          prob_interval
name                                                             
Sekundarstufe I      0.693862     0.731554   [0.521071, 0.954431]
Sekundarstufe II     0.649989     0.676254   [0.451534, 0.917366]
Primarstufe          0.506203     0.508055   [0.224956, 0.784324]
Erwachsenenbildung   0.307388     0.268428  [0.0311729, 0.485459]
Berufliche Bildung   0.226753     0.188639  [0.0262085, 0.359061]
Fortbildung          0.208531     0.167240  [0.0182191, 0.325982]
Hochschule           0.204619     0.160885  [0.0208641, 0.325699]
Förderschule         0.197321     0.158335  [0.0125502, 0.308864]
Fernunterricht       0.181650     0.141782  [0.0121232, 0.277826]
Elementarbereich     0.166240     0.130909   [0.013893, 0.261197]

properties.ccm:educationalintendedenduserrole
--------------------------------------------------------------------
            mean_prob  median_prob           prob_interval
name                                                      
Lerner/in    0.652971     0.683741     [0.46025, 0.935748]
Lehrer/in    0.656857     0.683378    [0.463983, 0.946488]
Eltern       0.320178     0.291456   [0.0450983, 0.490025]
Berater/in   0.190932     0.149347   [0.0127625, 0.300094]
andere       0.166722     0.128250   [0.0178637, 0.257693]
Verwaltung   0.170224     0.126535  [0.00707068, 0.272807]
Autor/in     0.121999     0.088429  [0.00799098, 0.187926]

properties.ccm:oeh_lrt
--------------------------------------------------------------------
                                      mean_prob  ...          prob_interval
name                                             ...                       
Material                               0.391915  ...    [0.105415, 0.60407]
Audio                                  0.366738  ...   [0.100671, 0.571338]
Arbeitsblatt                           0.289001  ...  [0.0510273, 0.459163]
Wiki (dynamisch)                       0.298015  ...   [0.0404458, 0.46602]
Erklärvideo und gefilmtes Experiment   0.283874  ...  [0.0295294, 0.439783]
Unterrichtsbaustein                    0.266263  ...  [0.0347012, 0.405298]
Webseite                               0.261708  ...  [0.0256474, 0.401249]
Kurs                                   0.239701  ...  [0.0284178, 0.373002]
Tool                                   0.231944  ...  [0.0244875, 0.369845]
Dokumente und textbasierte Inhalte     0.219807  ...    [0.01733, 0.333026]

[10 rows x 3 columns]

properties.ccm:taxonid
--------------------------------------------------------------------
                            mean_prob  ...          prob_interval
name                                   ...                       
Allgemein                    0.342221  ...  [0.0722737, 0.542803]
Geschichte                   0.299102  ...  [0.0486382, 0.465463]
Physik                       0.262397  ...   [0.0272661, 0.41942]
Mathematik                   0.251121  ...    [0.034717, 0.39587]
Spanisch                     0.245882  ...  [0.0261247, 0.385622]
Informatik                   0.240047  ...  [0.0409242, 0.387201]
Open Educational Resources   0.212749  ...  [0.0147191, 0.327387]
Philosophie                  0.211040  ...  [0.0173508, 0.327248]
Kunst                        0.211008  ...  [0.0171556, 0.333056]
Astronomie                   0.200756  ...  [0.0145294, 0.312497]

[10 rows x 3 columns]
#+end_example

The individual probabilities of the categories do not add up to 1. This is intended, as assigning a text multiple relevant categories is often desired. As an example, take the following paragraph taken from [[https://de.wikipedia.org/wiki/Deutschland][the German Wikipedia page on Germany]]. This is mostly about the history of Germany, but because it also covers relatively recent developments, it may also be relevant to politics.
#+begin_src shell :exports both
curl -X 'POST' \
  'http://localhost:8080/predict' \
  -H 'Content-Type: application/json' \
  -d '{
  "text": "Die rasche Entwicklung vom Agrar- zum Industriestaat vollzog sich während der Gründerzeit in der zweiten Hälfte des 19. Jahrhunderts. Nach dem Ersten Weltkrieg wurde 1918 die Monarchie abgeschafft und die demokratische Weimarer Republik konstituiert. Ab 1933 führte die nationalsozialistische Diktatur zu politischer und rassistischer Verfolgung und gipfelte in der Ermordung von sechs Millionen Juden und Angehörigen anderer Minderheiten wie Sinti und Roma. Der vom NS-Staat 1939 begonnene Zweite Weltkrieg endete 1945 mit der Niederlage der Achsenmächte. Das von den Siegermächten besetzte Land wurde 1949 geteilt, nachdem bereits 1945 seine Ostgebiete teils unter polnische, teils sowjetische Verwaltungshoheit gestellt worden waren. Der Gründung der Bundesrepublik als demokratischer westdeutscher Teilstaat mit Westbindung am 23. Mai 1949 folgte die Gründung der sozialistischen DDR am 7. Oktober 1949 als ostdeutscher Teilstaat unter sowjetischer Hegemonie. Die innerdeutsche Grenze war nach dem Berliner Mauerbau (ab 13. August 1961) abgeriegelt. Nach der friedlichen Revolution in der DDR 1989 erfolgte die Lösung der deutschen Frage durch die Wiedervereinigung beider Landesteile am 3. Oktober 1990, womit auch die Außengrenzen Deutschlands als endgültig anerkannt wurden. Durch den Beitritt der fünf ostdeutschen Länder sowie die Wiedervereinigung von Ost- und West-Berlin zur heutigen Bundeshauptstadt zählt die Bundesrepublik Deutschland seit 1990 sechzehn Bundesländer.",
  "num_predictions": "7",
  "num_samples": "2500"
}'
#+end_src

#+RESULTS:
#+begin_example
properties.ccm:curriculum
--------------------------------------------------------------------
                                  mean_prob  ...           prob_interval
name                                         ...                        
Radioaktivität                     0.300978  ...   [0.0121552, 0.499051]
Geschichtswissenschaft             0.303628  ...  [0.00930563, 0.512916]
Landeskunde und Interkulturelles   0.275905  ...    [0.015183, 0.439735]
Phasen des Zweiten Weltkrieges     0.256373  ...   [0.0204199, 0.419438]
Grundlagen                         0.250679  ...  [0.00467539, 0.402257]
Deutschland 1949 - 1990            0.260879  ...  [0.00796618, 0.439461]
Erneuerbare Energien               0.254707  ...  [0.00849646, 0.423623]

[7 rows x 3 columns]

properties.ccm:educationalcontext
--------------------------------------------------------------------
                    mean_prob  median_prob           prob_interval
name                                                              
Sekundarstufe I      0.735882     0.775913    [0.571736, 0.964907]
Sekundarstufe II     0.706944     0.747572    [0.546487, 0.962535]
Primarstufe          0.404712     0.389347     [0.0990535, 0.6432]
Berufliche Bildung   0.263775     0.222147    [0.036798, 0.417862]
Erwachsenenbildung   0.237194     0.192356    [0.016364, 0.368393]
Förderschule         0.225443     0.180851    [0.023421, 0.359656]
Hochschule           0.187094     0.144026  [0.00905728, 0.286907]

properties.ccm:educationalintendedenduserrole
--------------------------------------------------------------------
            mean_prob  median_prob           prob_interval
name                                                      
Lehrer/in    0.796880     0.836422    [0.682795, 0.985232]
Lerner/in    0.579315     0.596731    [0.331366, 0.865469]
Eltern       0.259573     0.212766   [0.0108353, 0.412066]
Autor/in     0.177548     0.136497   [0.0124903, 0.283871]
Verwaltung   0.158801     0.114061  [0.00271138, 0.253795]
andere       0.148150     0.110032   [0.0066927, 0.228165]
Berater/in   0.141346     0.101352  [0.00685803, 0.229938]

properties.ccm:oeh_lrt
--------------------------------------------------------------------
                                           mean_prob  ...          prob_interval
name                                                  ...                       
Material                                    0.419131  ...   [0.117078, 0.636927]
Audio                                       0.356592  ...  [0.0566414, 0.542816]
Wiki (dynamisch)                            0.293850  ...  [0.0314072, 0.472712]
Arbeitsblatt                                0.256532  ...   [0.040075, 0.409052]
Unterrichtsplanung                          0.228018  ...  [0.0201491, 0.360451]
außerschulische Angebot (Bildungsangebot)   0.220835  ...  [0.0168385, 0.346011]
Erklärvideo und gefilmtes Experiment        0.212275  ...  [0.0230689, 0.330811]

[7 rows x 3 columns]

properties.ccm:taxonid
--------------------------------------------------------------------
                 mean_prob  median_prob          prob_interval
name                                                          
Geschichte        0.735176     0.777531   [0.578536, 0.994128]
Politik           0.349794     0.324221  [0.0833338, 0.562933]
Sozialpädagogik   0.213501     0.172860  [0.0229657, 0.334145]
Deutsch           0.207990     0.170669  [0.0194489, 0.320888]
Allgemein         0.196320     0.158850  [0.0164033, 0.303439]
MINT              0.188128     0.151341  [0.0186367, 0.299104]
Musik             0.188814     0.147004   [0.015786, 0.298096]
#+end_example

* Notes / Limitations

** RAM Usage
The service requires roughly 2GB of RAM to operate. This usage should be static with time.

** Cutoffs
Because of the nature of the model, it can be difficult to decide on which predictions shall be counted as actually being predicted to be assigned. Experimentally, a cutoff of around 0.3 for the mean probability for the school discipline and 0.4 for the educational context appear to be good metrics.

However, more investigations into better cutoffs, e.g. per-category, might be useful.

** Hierarchical Metadata
While the model can technically predict some hierarchical metadata (i.e. =oeh_lrt= and =curriculum=), these hierarchies are currently flattened, such that any information stemming from the hierarchies is discarded. This may be dealt with at a later date.

* Installation (through ~Nix Flakes~)

Add this repository to your Flake inputs. This may look like this:
#+begin_src nix
{
  inputs = {
    its-jointprobability = {
      url = "github:openeduhub/its-jointprobability";
      # optional if using as application, required if using as library
      nixpkgs.follows = "nixpkgs"; 
    };
  };
}
#+end_src

The micro-service is provided both as a ~nixpkgs~ overlay and as an output (~packages.${system}.its-jointprobability~). Thus, it may be included through
#+begin_src nix
{
  outputs = { self, nixpkgs, its-jointprobability, ... }:
    let
      system = "x86_64-linux";
      pkgs =
        (nixpkgs.legacyPackages.${system}.extend
          its-jointprobability.overlays.default);
    in
    { ... };
}
  
#+end_src

The Python library is provided as an output (~lib.${system}.its-jointprobability~). Note that this is a function mapping a Python package (e.g. ~pkgs.python310~) to the library. Its inclusion may look like this:
#+begin_src nix
{
  outputs = { self, nixpkgs, its-jointprobability, ... }:
    let
      system = "x86_64-linux";
      pkgs = nixpkgs.legacyPackages.${system};
      
      python-with-packages =
        pkgs.python310.withPackages (py-pkgs: [
          # some example packages
          py-pkgs.numpy
          py-pkgs.pandas
          # the its-jointprobability library
          (its-jointprobability.lib.${system}.its-jointprobability py-pkgs)
        ]);
    in
    { ... };
}
#+end_src
